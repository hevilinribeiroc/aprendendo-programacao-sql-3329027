CREATE TABLE VENDAS(
  ID_NF INT NOT NULL,
  ID_ITEM INT NOT NULL,
  COD_PROD INT NOT NULL,
  VALOR_UNIT DECIMAL(10,2) NOT NULL,
  QUANTIDADE INT NOT NULL,
  DESCONTO INT
)


INSERT INTO VENDAS(ID_NF, ID_ITEM, COD_PROD, VALOR_UNIT, QUANTIDADE, DESCONTO)
VALUES
  (1,1,1, 25.00, 10, 5),
  (1,2,2,13.50,3, NULL),
  (1,3,3,15.00,2,NULL),
  (1,4,4,10.00,1,NULL),
  (1,5,5,30.00,1, NULL),
  (2,1,3,15.00,4,NULL),
  (2,2,4,10.00,5,NULL),
  (2,3,5,30.00,7,NULL),
  (3,1,1,25.00,5,NULL),
  (3,2,4,10.00,4,NULL),
  (3,3,5,30.00,5,NULL),
  (3,4,2,13.50,7,NULL),
  (4,1,5,30.00,10,15),
  (4,2,4,10.00,12,5),
  (4,3,1,25.00,13,5),
  (4,4,2,13.50,15,5),
  (5,1,3,15.00,3,NULL),
  (5,2,5,30.00,6,NULL),
  (6,1,1,25.00,22,15),
  (6,2,3,15.00,25,20),
  (7,1,1,25.00,10,3),
  (7,2,2,13.50,10,4),
  (7,3,3,15.00,10,4),
  (7,4,5,30.00,10,1);

-- EXERCICIO A

SELECT 
ID_NF, 
ID_ITEM, 
COD_PROD, 
VALOR_UNIT
FROM VENDAS
WHERE DESCONTO IS NULL

-- EXERCICIO B

SELECT 
ID_NF, 
ID_ITEM, 
COD_PROD,
VALOR_UNIT, 
(VALOR_UNIT) - (VALOR_UNIT*(DESCONTO/100.00)) AS VALOR_VENDA
FROM VENDAS
WHERE DESCONTO IS NOT NULL

-- EXERCICIO C

UPDATE VENDAS
SET DESCONTO = 0
WHERE DESCONTO IS NULL

SELECT * FROM VENDAS

-- EXERCICIO D

SELECT 
ID_NF, 
ID_ITEM, 
COD_PROD, 
VALOR_UNIT, 
VALOR_UNIT*QUANTIDADE AS VALOR_TOTAL, 
DESCONTO,
(VALOR_UNIT*QUANTIDADE) - ((VALOR_UNIT*QUANTIDADE)*(DESCONTO/100.00)) AS VALOR_VENDIDO
FROM VENDAS

-- EXERICIO E 

SELECT
ID_NF,
SUM(QUANTIDADE*VALOR_UNIT) AS VALOR_TOTAL
FROM VENDAS
GROUP BY ID_NF
ORDER BY VALOR_TOTAL DESC

-- EXERICIO F

SELECT
ID_NF,
SUM(VALOR_UNIT - (VALOR_UNIT*(DESCONTO/100)))
AS VALOR_VENDIDO
FROM VENDAS
GROUP BY ID_NF
ORDER BY VALOR_VENDIDO DESC

-- EXERCICIO G

SELECT COD_PROD, SUM(QUANTIDADE) AS QUANTIDADE_POR_PRODUTO
FROM VENDAS
GROUP BY COD_PROD
ORDER BY QUANTIDADE_POR_PRODUTO DESC

-- EXERCICIO H

SELECT ID_NF, COD_PROD, QUANTIDADE
FROM VENDAS
WHERE QUANTIDADE >= 10
GROUP BY ID_NF, COD_PROD

-- EXERCICIO I

SELECT
ID_NF, 
SUM(QUANTIDADE*VALOR_UNIT) AS VALOR_TOT
FROM VENDAS
GROUP BY ID_NF
HAVING SUM(QUANTIDADE*VALOR_UNIT) >= 500

-- EXERCICIO J

SELECT 
COD_PROD,
ROUND(AVG(DESCONTO),2) AS MEDIA
FROM VENDAS
GROUP BY COD_PROD

-- EXERCICIO K

SELECT
COD_PROD,
MIN(DESCONTO) AS MENOR,
MAX(DESCONTO) AS MAIOR,
AVG(DESCONTO) AS MEDIA
FROM VENDAS
GROUP BY COD_PROD

-- EXERCICIO L

SELECT ID_NF, COD_PROD, QUANTIDADE
FROM VENDAS
WHERE QUANTIDADE >= 3
GROUP BY ID_NF

-- OUTRA LISTA 

CREATE TABLE Pais(
  Nome varchar(35), 
  Continente varchar(35), 
  Pop real, 
  PIB real, 
  Expec_vida real
);

CREATE TABLE Cidade(
  Nome varchar(35), 
  Pais varchar(35), 
  Pop real, 
  Capital varchar(1)
);

CREATE TABLE Rio(
  Nome varchar(35), 
  Origem varchar(35), 
  Comprimento integer
)

INSERT INTO Pais(
  Nome, Continente, Pop, PIB, Expec_vida
)
VALUES
('Canada', 'Am. Norte', 30.1, 658, 77.08),
('Mexico', 'Am. Norte', 107.5, 694, 69.1),
('Brasil', 'Am. Sul', 183.3, 10004, 65.2),
('USA', 'Am. Norte', 270.0, 8003, 75.5)

INSERT INTO Cidade(
  Nome, Pais, Pop, Capital
)
VALUES
('Washington', 'USA', 3.3, 'S'),
('Monterrey', 'Mexico', 2.0, 'N'),
('Brasilia', 'Brasil', 1.5, 'S'),
('São Paulo', 'Brasil', 15.0, 'N'),
('Ottawa', 'Canada', 0.8, 'S'),
('Cid. Mexico', 'Mexico', 14.1, 'S')


INSERT INTO Rio(
  Nome, Origem, Comprimento
)
VALUES
('St. Lawrence', 'USA', 3.3),
('Grande', 'USA', 2.0),
('Parana', 'Brasil', 1.5),
('Mississipi', 'USA', 15.0)

-- EXERCÍCIO 1

SELECT Nome, Pais 
FROM Cidade

-- EXERCÍCIO 2

SELECT Nome
FROM Cidade
WHERE Capital LIKE 'S'

-- EXERCÍCIO 3

SELECT * FROM Pais
WHERE Expec_vida < 70

-- EXERCÍCIO 4

SELECT
Cidade.Nome AS Capital,
Pais.Pop AS Populacao
FROM Pais
INNER JOIN Cidade ON Cidade.Pais = Pais.Nome
WHERE Pais.PIB > 1000 AND Cidade.Capital LIKE 'S'

-- EXERCICIO 5 

SELECT Cidade.Nome,
Cidade.Pop
FROM Cidade
INNER JOIN Rio ON Rio.Origem = Cidade.Pais
WHERE Pais = 
  (SELECT Origem FROM Rio WHERE Nome = 'St. Lawrence') 
  AND Capital = 'S'
GROUP BY Cidade.Nome

-- EXERCICIO 6

SELECT 
AVG(Pop) AS MediaPopulacao
FROM Cidade
WHERE Capital LIKE 'N'

-- EXERCICIO 7

SELECT
Continente,
ROUND(AVG(PIB),2) as MediaPIB
FROM Pais
GROUP BY Continente

-- EXERCICIO 8

SELECT 
Origem,
ROUND(MIN(Comprimento),2) AS MenorComprimento
FROM Rio
GROUP BY Origem

-- EXERCICIO 9

SELECT 
Nome, PIB
FROM Pais
WHERE PIB > (
  SELECT PIB
  FROM Pais
  WHERE Nome LIKE 'Canada'
)


